<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE macker PUBLIC "-//innig//DTD Macker 0.2//EN" "http://innig.net/macker/src/macker.dtd"> -->

<macker>

    <ruleset name="filter test">

        <ruleset>
            <ruleset name="nested2"/>
        </ruleset>
        
        <pattern name="foo" filter="interface" />
        
        <access-rule>
            <deny>
<!--
                <from filter="extends" class="........">
                </from>
-->
                <from filter="abstract-class">
                    <include class="**Filter*" />
                </from>
                <to class="java.lang.xObject" />
            </deny>
        </access-rule>
        
        <access-rule>
            <message>${from} and ${to} and stuff</message>
            <deny>
                <from filter="subtype-of" class="net.innig.macker.rule.Rule">
                    <include class="**Rule*" />
                </from>
                <to class="void" />
            </deny>
        </access-rule>
        
        <foreach var="rule-package" class="(**).*Rule*">
            <message>Rülé package: ${rule-package}</message>
        </foreach>
        
    </ruleset>

<!--
    <ruleset name="Macker internal rules" severity="info">
    
        <var name="basepkg" value="net.innig.macker" /> 
        
        <pattern name="macker" class="${basepkg}.**" />
        
        <pattern name="structure">
            <include pattern="macker">
                <include class="*.structure.**" />
            </include>
        </pattern>

        <pattern name="rule">
            <include pattern="macker">
                <include class="*.rule.**" />
            </include>
        </pattern>
        
        <pattern name="event">
            <include pattern="macker">
                <include class="*.event.**" />
            </include>
        </pattern>
        
        <pattern name="main">
            <include pattern="macker">
                <exclude class="${basepkg}.*.**" />
            </include>
        </pattern>
        
        <pattern name="exception">
            <include class="**Exception" />
        </pattern>
        
        <access-rule>
            <deny>
                <from>
                    <include pattern="structure" />
                </from>
                <to>
                    <include pattern="rule" />
                    <include pattern="event" />
                </to>
            </deny>
        </access-rule>

        <foreach var="type-class" class="(**Type)">
            <access-rule>
                <deny>
                    <from class="${type-class}" />
                    
                    <allow><to class="java.**" /></allow>
                    <allow><to class="javax.**" /></allow>
                    <allow><to class="net.innig.util.EnumeratedType" /></allow>
                </deny>
            </access-rule>
        </foreach>

        <foreach var="exception" class="(**Exception)">
            <message>Ahoy! ${exception}</message>
        </foreach>

    </ruleset>


    <ruleset name="Stupid test ruleset" severity="info">
        <subset class="**Class*" />
            <access-rule>
                <deny>
                    <from class="net.innig.macker.**" />
                    <to class="java.lang.Object" />
                </deny>
            </access-rule>
        
        <ruleset name="Inner stupid test ruleset">
            <subset class="**.structure.*" />
            <access-rule severity="warning">
                <deny>
                    <from class="net.innig.macker.**" />
                    <to class="java.lang.Object" />
                </deny>
            </access-rule>
        </ruleset>
    </ruleset>
-->
</macker>


